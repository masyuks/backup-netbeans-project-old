/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Pertemuan4;

import java.awt.FileDialog;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JOptionPane;

/**
 *
 * @author ACER
 */
public class NotepadFilter extends javax.swing.JFrame {

    /**
     * Creates new form NotepadFilter
     */
    private String location="";
    
    public NotepadFilter() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        taContent = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        miNew = new javax.swing.JMenuItem();
        miOpen = new javax.swing.JMenuItem();
        miSave = new javax.swing.JMenuItem();
        miSaveAs = new javax.swing.JMenuItem();
        miKeluar = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        miReset = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        miHint = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        taContent.setColumns(20);
        taContent.setRows(5);
        jScrollPane1.setViewportView(taContent);

        jMenu1.setText("File");

        miNew.setText("New");
        miNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miNewActionPerformed(evt);
            }
        });
        jMenu1.add(miNew);

        miOpen.setText("Open");
        miOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miOpenActionPerformed(evt);
            }
        });
        jMenu1.add(miOpen);

        miSave.setText("Save");
        miSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miSaveActionPerformed(evt);
            }
        });
        jMenu1.add(miSave);

        miSaveAs.setText("Save As");
        miSaveAs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miSaveAsActionPerformed(evt);
            }
        });
        jMenu1.add(miSaveAs);

        miKeluar.setText("Keluar");
        miKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miKeluarActionPerformed(evt);
            }
        });
        jMenu1.add(miKeluar);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        miReset.setText("Reset");
        miReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miResetActionPerformed(evt);
            }
        });
        jMenu2.add(miReset);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Help");

        miHint.setText("Hint");
        miHint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miHintActionPerformed(evt);
            }
        });
        jMenu3.add(miHint);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void miNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miNewActionPerformed
        // TODO add your handling code here:
        this.dispose();
        new NotepadFilter().setVisible(true);
    }//GEN-LAST:event_miNewActionPerformed

    private void miOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miOpenActionPerformed
        // TODO add your handling code here:
        FileDialog fd = new FileDialog(this, "Saved File", FileDialog.LOAD);
        fd.show();
        if (fd.getFile() != null) {
            location = fd.getDirectory() + fd.getFile();
            setTitle("Notepad System - "+fd.getFile());
            try {
                String data;
                FileReader f = new FileReader(location);
                BufferedReader br = new BufferedReader(f);
                StringBuffer sb =new StringBuffer(); 
                while((data=br.readLine())!=null)  
                {  
                    sb.append(data);
                    sb.append("\n");
                }
                taContent.setText(sb.toString());
                br.close();
                f.close();
            } catch (IOException e) {
                JOptionPane.showMessageDialog(null, "Maaf! File Tidak Bisa Dibuka");
            }
        }
        else {
            JOptionPane.showMessageDialog(null, "Lokasi tidak ditemukan!");
        }
    }//GEN-LAST:event_miOpenActionPerformed

    private void miSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miSaveActionPerformed
        // TODO add your handling code here:
        if (location != "") {
            try {
                FileWriter fw = new FileWriter(location);
                BufferedWriter bw = new BufferedWriter(fw);
                String data = taContent.getText();
                bw.write(data);
                bw.flush();
                bw.close();
                fw.close();
                JOptionPane.showMessageDialog(null, "Data berhasil tersimpan.");
            } catch (IOException e) {
                JOptionPane.showMessageDialog(null, "Penyimpanan Gagal! Terdapat Error");
                System.err.println("Maaf, Terdapat Error!");
                this.dispose();
            }
        }
        else {
            FileDialog fd = new FileDialog(this, "Save", FileDialog.SAVE);
            fd.show();
            if (fd.getFile() != null) {
                location = fd.getDirectory() + fd.getFile();
                setTitle("Notepad System - "+fd.getFile());
                try {
                    FileWriter fw = new FileWriter(location);
                    BufferedWriter bw = new BufferedWriter(fw);
                    String data = taContent.getText();
                    bw.write(data);
                    bw.flush();
                    bw.close();
                    fw.close();
                    JOptionPane.showMessageDialog(null, "Data berhasil tersimpan.");
                } catch (IOException e) {
                    JOptionPane.showMessageDialog(null, "Penyimpanan Gagal! Terdapat Error");
                    System.err.println("Maaf, Terdapat Error!");
                    this.dispose();
                }
            }
            else {
                JOptionPane.showMessageDialog(null, "Lokasi tidak ditemukan!");
            }
        }
    }//GEN-LAST:event_miSaveActionPerformed

    private void miSaveAsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miSaveAsActionPerformed
        // TODO add your handling code here:
        FileDialog fd = new FileDialog(this, "Save As", FileDialog.SAVE);
        fd.show();
        if (fd.getFile() != null) {
            location = fd.getDirectory() + fd.getFile();
            setTitle("Notepad System - "+fd.getFile());
            String file = "";
            file = fd.getDirectory() + fd.getFile() + ".txt";
            try {
                FileWriter fw = new FileWriter(location);
                BufferedWriter bw = new BufferedWriter(fw);
                String data = taContent.getText();
                bw.write(data);
                bw.flush();
                bw.close();
                fw.close();
                JOptionPane.showMessageDialog(null, "Data berhasil tersimpan.");
            } catch (IOException e) {
                JOptionPane.showMessageDialog(null, "Penyimpanan Gagal! Terdapat Error");
                System.err.println("Maaf, Terdapat Error!");
                this.dispose();
            }
        }
        else {
            JOptionPane.showMessageDialog(null, "Lokasi tidak ditemukan!");
        }
    }//GEN-LAST:event_miSaveAsActionPerformed

    private void miKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miKeluarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_miKeluarActionPerformed

    private void miResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miResetActionPerformed
        // TODO add your handling code here:
        taContent.setText("");
    }//GEN-LAST:event_miResetActionPerformed

    private void miHintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miHintActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null,
            "Klik File-New untuk memulai project \n"
            + "Klik File-Open untuk membuka project \n"
            + "Klik File-Save untuk menyimpan project \n"
            + "Klik File-Save As untuk menyimpan project ke file baru \n"
            + "Klik File-Keluar untuk keluar project \n"
            + "Klik Edit-Reset untuk mereset project");
    }//GEN-LAST:event_miHintActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NotepadFilter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NotepadFilter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NotepadFilter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NotepadFilter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NotepadFilter().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem miHint;
    private javax.swing.JMenuItem miKeluar;
    private javax.swing.JMenuItem miNew;
    private javax.swing.JMenuItem miOpen;
    private javax.swing.JMenuItem miReset;
    private javax.swing.JMenuItem miSave;
    private javax.swing.JMenuItem miSaveAs;
    private javax.swing.JTextArea taContent;
    // End of variables declaration//GEN-END:variables
}
